@using System.Security.Claims
@model PaginatedList<W24_TP.Models.Reply>

@{
	ViewData["Title"] = "IndexPerSub";
	var subjectId = ViewContext.RouteData.Values["id"];
	var firstModel = Model.FirstOrDefault();

	var activeSubject = Model.Where(sub => sub.Active);

	var sel = new List<SelectListItem>()
{
		new SelectListItem(){Text="5",Value="5" },
		new SelectListItem(){Text="10",Value="10" },
		new SelectListItem(){Text="15",Value="15" },
		new SelectListItem(){Text="20",Value="20" }
	};

	var activeMessages = Model.Where(rep => rep.Active);
}

<style>
	.card {
		background: rgb(255,255,255);
		background: linear-gradient(0deg, rgba(255,255,255,0) 0%, rgba(0,0,128,1) 100%);
	}
</style>

@if (firstModel != null && firstModel.FkSubjectNavigation != null)
{
	<div class="row">
		<div class="col">
			<h1>@Html.DisplayFor(model => firstModel.FkSubjectNavigation.Title)</h1>
		</div>
		<div class="col d-flex justify-content-end align-items-center">
			<a class="btn btn-primary" asp-area="" asp-controller="Replies" asp-action="CreatePerSub" asp-route-id="@firstModel.FkSubjectNavigation.Id">Write a reply</a>
		</div>
	</div>
}

@if (!activeMessages.Any())
{
	<div class="row">
		<div class="col">
			<h1>No replies yet</h1>
		</div>
		<div class="col d-flex justify-content-end align-items-center">
			<a class="btn btn-primary" asp-area="" asp-controller="Replies" asp-action="CreatePerSub" asp-route-id="@subjectId">Create the first message</a>
		</div>
	</div>
}
else
{
	foreach (var rep in activeMessages)
	{
		<div class="card" style="margin-bottom: 1rem;">
			<img class="card-img-top" />
			<div class="card-body">
				<div class="d-flex flex-row justify-content-between">
					<h5 class="card-title" style="flex: 1;">ID : @rep.Id</h5>
					<p class="card-title text-muted" style="flex: 1; text-align: center;">@rep.Date</p>
					<h5 class="card-title" style="flex: 1; text-align: end;">u/@rep.FkUserNavigation!.UserName</h5>
				</div>
				<hr />
				<div class="card-body">@Html.Raw(rep.Body)</div>
				@if (User.FindFirstValue(ClaimTypes.NameIdentifier) == rep.FkUserNavigation.Id)
				{
					<div class="d-flex flex-row justify-content-end">
						<a class="btn btn-outline-warning card-btn" asp-area="" asp-controller="Replies" asp-action="EditUser" asp-route-id="@rep.Id"><i class="fa-solid fa-pen"></i></a>
						<a class="btn btn-outline-danger card-btn" asp-area="" asp-controller="Replies" asp-action="DeleteUser" asp-route-id="@rep.Id"><i class="fa-solid fa-trash"></i></a>
					</div>
				}
			</div>
		</div>
	}
}

<div class="d-flex flex-row justify-content-between">
	<div class="d-flex flex-row justify-content-between">
		<h6>Items per page :</h6>
		<div id="divSelectList">
			<select id="selectlist" asp-items=sel></select>
		</div>
	</div>
	<div>
		@* Display Code *@
		@{
			string prevDisabled = Model.HasPreviousPage ? "" : "disabled";
			string nextDisabled = Model.HasNextPage ? "" : "disabled";
		}

		@* Navigation *@
		@* First *@
		<a asp-action="IndexPerSub" asp-route-pageNumber="1" asp-route-customPageSize="@ViewData["customPageSize"]"
		   class="btn btn-primary @prevDisabled">FIRST</a>
		@* Previous *@
		<a asp-action="IndexPerSub" asp-route-pageNumber="@(Model.PageIndex-1)" asp-route-customPageSize="@ViewData["customPageSize"]"
		   class="btn btn-primary @prevDisabled">PREV</a>

		@*CurrentPage*@
		<a class="disabled btn btn-primary">@Model.PageIndex / @Model.TotalPages</a>

		@* Next *@
		<a asp-action="IndexPerSub" asp-route-pageNumber="@(Model.PageIndex+1)" asp-route-customPageSize="@ViewData["customPageSize"]"
		   class="btn btn-primary @nextDisabled">NEXT</a>
		@* Last *@
		<a asp-action="IndexPerSub" asp-route-pageNumber="@Model.TotalPages" asp-route-customPageSize="@ViewData["customPageSize"]"
		   class="btn btn-primary @nextDisabled">LAST</a>
	</div>
</div>

<script src="~/lib/jquery/dist/jquery.min.js"></script>

<script>
	var getUrlParameter = function getUrlParameter(sParam) {
		var sPageURL = window.location.search.substring(1),
			sURLVariables = sPageURL.split('&'),
			sParameterName,
			i;

		for (i = 0; i < sURLVariables.length; i++) {
			sParameterName = sURLVariables[i].split('=');

			if (sParameterName[0] === sParam) {
				return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
			}
		}
		return false;
	};

	$('#selectlist').val(5).change();

	$('#selectlist').val(getUrlParameter("customPageSize")).change();
	$(function () {
		$('#selectlist').change(function () {
			window.location.href = window.location.pathname + "?customPageSize=" + $(this).val();
		})
	});
</script>

